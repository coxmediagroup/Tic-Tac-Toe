Participant: James Robey, jrobey.services@gmail.com

The goal is to create an interactive game of Tic Tac Toe with one human and a computer based player. There are no other guidelines enforced by the challenge so the following structure will be created to create the game.

######################################################################

1) All operation is meant to take place on localhost, that is, all on the same computer.

    a) The entire game is a client/server pattern with a python script as the server and a HTML page derived from openlaszlo

    b) The python script is started
    
    c) the openlaszlo-based html page is opened in a web-browser on the same machine the script is started on.
    
######################################################################

2) Python script (server running on port 9090 using a simple XML protocol on top of ajax requests)

    a) The backend is python script that will respond to http requests on localhost until terminated (on port 9090)
         
    b) it will use a simple and insecure python-based http server to respond to the client update of game state
        
    c) It is stateless. It will only return the next move when it receives a given board's state (as discussed in point 4), along with a success flag indicating which player won, if the game has ended.
    
######################################################################
        
3) Open-Laszlo client (HTML page compiled from openlaszlo source)

    a) A HTML page that displays a tic-tac-toe board graphically.  
    
    b) The human will always go first. Although it's pretty easy to do both (the logic is copied at the bottom of this page) since one infers the other, we'll just code one path for this challenge.
    
    c) a reset button is provided to reset gameplay at any point
    
    d) on each move the state of the board is sent to the server
    
    e) the client recieves the next state from the server, displaying it. If a success flag is set, the client displays the winning status (whether human or computer) and shows a button to reset the game.
    
######################################################################
    
4) XML Protocol used between the client and server

    a) the board is represented by XML sent to and from the client to the server to the client, etc.
    
    b) it is composed of a structure like so:
    
        <board> <!-- the 'won' attribute would be 'x' or 'o' if either had won i.e. won="x" -->
            <space x="0" y="0" has="x"/>
            <space x="1" y="0" has="o"/>
            <space x="2" y="0" has="x"/>
            <!-- (and so on, for each space filled, if filled. This is a game in progress, started by x, on o's turn) -->
        </board>
    
    c) a reset merely returns this structure to an empty board tag.
    
This is the envisioned structure. This document will be updated as necessary to reflect changes.

######################################################################

5) Tic Tac Toe strategy

    See the file "gameplay.rtf" for the rules of the game, as will be implemented. The human will always go first.


